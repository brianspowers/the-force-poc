{"version":3,"sources":["App.tsx","index.tsx"],"names":["StyledList","styled","ul","StyledNavLink","NavLink","App","className","to","mountId","undefined","window","id","ReactDOM","render","document","getElementById","mountNode","unmountComponentAtNode"],"mappings":"6KAIMA,EAAaC,IAAOC,GAAV,+NAcVC,EAAgBF,YAAOG,IAAPH,CAAH,oPAoCJI,MAtBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,kBAACN,EAAD,KACE,4BACE,kBAACG,EAAD,CAAeI,GAAG,oBAAlB,oBAEF,4BACE,kBAACJ,EAAD,CAAeI,GAAG,sBAAlB,sBAIF,4BACE,kBAACJ,EAAD,CAAeI,GAAG,iBAAlB,qBCnCRC,OAA8BC,EAElCC,OAAM,iBAAuB,WAA0B,IAAzBC,EAAwB,uDAAX,OACzCH,EAAUG,EAEVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAeJ,KAGnDD,OAAM,mBAAyB,WAC7B,GAAIF,EAAS,CACX,IAAMQ,EAAYF,SAASC,eAAeP,GACtCQ,GACFJ,IAASK,uBAAuBD,O","file":"static/js/main.d912c462.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom';\n\nconst StyledList = styled.ul`\n  box-sizing: border-box;\n  list-style: none;\n  margin: 0;\n  padding: 10px 40px;\n  display: flex;\n  background-color: steelblue;\n\n  li {\n    display: block;\n    margin-left: 40px;\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  color: white;\n  display: block;\n  text-decoration: none;\n  padding: 5px 5px;\n  border: 2px solid transparent;\n  border-radius: 6px;\n\n  &.active {\n    border: 2px solid white;\n    border-radius: 6px;\n  }\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <StyledList>\n          <li>\n            <StyledNavLink to=\"/installed-sales\">Installed Sales</StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"/sales-order-entry\">\n              Sales Order Entry\n            </StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"/system-admin\">System Admin</StyledNavLink>\n          </li>\n        </StyledList>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\ndeclare global {\n  interface Window {\n    navigation_mount: any;\n    navigation_unmount: any;\n  }\n}\n\nlet mountId: string | undefined = undefined;\n\nwindow['navigation_mount'] = (id: string = 'root') => {\n  mountId = id;\n\n  ReactDOM.render(<App />, document.getElementById(id));\n};\n\nwindow['navigation_unmount'] = () => {\n  if (mountId) {\n    const mountNode = document.getElementById(mountId);\n    if (mountNode) {\n      ReactDOM.unmountComponentAtNode(mountNode);\n    }\n  }\n};\n"],"sourceRoot":""}