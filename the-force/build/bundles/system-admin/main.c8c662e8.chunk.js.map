{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","className","mountId","undefined","window","id","ReactDOM","render","StrictMode","document","getElementById","mountNode","unmountComponentAtNode"],"mappings":"sLAMeA,MAJf,WACE,OAAO,yBAAKC,UAAU,OAAf,iBCSLC,OAA8BC,EAElCC,OAAO,sBAAwB,WAA0B,IAAzBC,EAAwB,uDAAX,OAC3CH,EAAUG,EAEVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAeL,KAI5BD,OAAO,wBAA0B,WAC/B,GAAIF,EAAS,CACX,IAAMS,EAAYF,SAASC,eAAeR,GACtCS,GACFL,IAASM,uBAAuBD,O","file":"static/js/main.c8c662e8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction App() {\n  return <div className=\"App\">System Admin</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\ndeclare global {\n  interface Window {\n    'system-admin_mount': any;\n    'system-admin_unmount': any;\n  }\n}\n\nlet mountId: string | undefined = undefined;\n\nwindow['system-admin_mount'] = (id: string = 'root') => {\n  mountId = id;\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(id)\n  );\n};\n\nwindow['system-admin_unmount'] = () => {\n  if (mountId) {\n    const mountNode = document.getElementById(mountId);\n    if (mountNode) {\n      ReactDOM.unmountComponentAtNode(mountNode);\n    }\n  }\n};\n"],"sourceRoot":""}